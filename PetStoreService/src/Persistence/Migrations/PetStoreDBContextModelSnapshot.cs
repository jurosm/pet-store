// <auto-generated />
#nullable disable

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace PetStoreService.Persistence.Migrations
{
    [DbContext(typeof(PetStoreDBContext))]
    partial class PetStoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetStore.API.Db.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", "petstore");
                });

            modelBuilder.Entity("PetStore.API.Db.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("DatePosted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ToyId")
                        .HasColumnType("integer");

                    b.HasKey("CommentId");

                    b.HasIndex("ToyId")
                        .HasDatabaseName("fki_Comment_Toy");

                    b.ToTable("Comment", "petstore");
                });

            modelBuilder.Entity("PetStore.API.Db.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("CustomerSurname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ExternalReferenceId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("IpinfoAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("IPInfoAddress");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("OrderId");

                    b.ToTable("Order", "petstore");
                });

            modelBuilder.Entity("PetStore.API.Db.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ToyId")
                        .HasColumnType("integer");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("fki_OrderItem_Order");

                    b.HasIndex("ToyId")
                        .HasDatabaseName("fki_OrderItem_Toy");

                    b.ToTable("OrderItem", "petstore");
                });

            modelBuilder.Entity("PetStore.API.Db.Toy", b =>
                {
                    b.Property<int>("ToyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ToyId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ToyId");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("fki_OrderItem_Category");

                    b.ToTable("Toy", "petstore");
                });

            modelBuilder.Entity("PetStore.API.Db.Comment", b =>
                {
                    b.HasOne("PetStore.API.Db.Toy", "Toy")
                        .WithMany("Comment")
                        .HasForeignKey("ToyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("Comment_Toy");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("PetStore.API.Db.OrderItem", b =>
                {
                    b.HasOne("PetStore.API.Db.Order", "Order")
                        .WithMany("OrderItem")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired()
                        .HasConstraintName("OrderItem_Order");

                    b.HasOne("PetStore.API.Db.Toy", "Toy")
                        .WithMany("OrderItem")
                        .HasForeignKey("ToyId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("OrderItem_Toy");

                    b.Navigation("Order");

                    b.Navigation("Toy");
                });

            modelBuilder.Entity("PetStore.API.Db.Toy", b =>
                {
                    b.HasOne("PetStore.API.Db.Category", "Category")
                        .WithMany("Toy")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("Toy_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PetStore.API.Db.Category", b =>
                {
                    b.Navigation("Toy");
                });

            modelBuilder.Entity("PetStore.API.Db.Order", b =>
                {
                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("PetStore.API.Db.Toy", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("OrderItem");
                });
#pragma warning restore 612, 618
        }
    }
}
